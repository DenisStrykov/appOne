version: '3.0'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT = ${ZOOKEEPER_CLIENT_PORT}
      - ZOOKEEPER_TICK_TIME = ${ZOOKEEPER_TICK_TIME}

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID = ${KAFKA_BROKER_ID}
      - KAFKA_ZOOKEEPER_CONNECT = ${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP = ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_ADVERTISED_LISTENERS = ${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR = ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR = ${KAFKA_TRANSACTION_STATE_LOG_MIN_ISR}
      - KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR = ${KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR}

  postgres:
    image: 'postgres:15.1-alpine'
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    restart: always

## Рабочий
#  kafka_manager:
#    image: hlebalbau/kafka-manager:stable
#    container_name: kafka-manager
#    hostname: kafka_manager
#    ports:
#      - "9000:9000"
#    environment:
#      ZK_HOSTS: "zookeeper:2181"
#      APPLICATION_SECRET: "random-secret"
#    command:
#      - Dpidfile.path=/dev/null